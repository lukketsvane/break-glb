{"version":3,"sources":["../main.tsx","../hooks.ts","../utils.ts","../components.tsx","../types.ts"],"names":["Model","url","isExploded","selectedPart","onPartSelect","onExplodeComplete","lightPosition","explosionDistance","enablePartSelection","scene","useGLTF","groupRef","useRef","parts","setParts","useState","camera","controls","gl","raycaster","pointer","useThree","hasExplodedRef","draggedPartRef","dragPlaneRef","dragOffsetRef","pointerDownRef","pointerDownTimeRef","previousDragPositionRef","grabPointRef","hasMovedRef","initialPositionRef","useEffect","explodableParts","findParts","obj","depth","child","directMeshes","box","center","size","collisionRadius","modelCenter","direction","distance","explodedPosition","collisionMesh","canvas","handlePointerDown","event","rect","intersects","clickedObject","part","p","current","normal","intersection","handlePointerMove","newPosition","dragDelta","torqueArm","torque","handlePointerUp","holdTime","startPosition","startTime","duration","animateCamera","elapsed","progress","eased","explodedBox","maxDim","fov","useFrame","state","delta","allSettled","index","object","originalPosition","currentPosition","velocity","isDragging","angularVelocity","originalRotation","targetPosition","distanceFromTarget","maxDistance","attractionStrength","attractionForce","otherPart","otherIndex","minDistance","partBox","otherBox","repulsionDirection","overlap","repulsionForce","velocityAlongNormal","impulse","bobAmount","jsx","LoadingFallback","BreakGLB","modelUrl","backgroundColor","ambientLightIntensity","directionalLightIntensity","shadowsEnabled","cameraFov","cameraPosition","explosionSpeed","animationEasing","showUploadUI","showControls","autoExplode","enableLightControl","enableRotate","enableZoom","enablePan","onLoad","onLoadError","onExplode","onAssemble","className","containerStyle","internalModelUrl","setInternalModelUrl","setIsExploded","setSelectedPart","setIsDragging","setLightPosition","fileInputRef","touchStartRef","isThreeFingerRef","isRightDraggingRef","rightDragStartRef","handleTouchStart","e","touch","handleTouchMove","deltaX","deltaY","prev","newPos","handleTouchEnd","handleMouseDown","handleMouseMove","handleMouseUp","handleContextMenu","handleFileUpload","useCallback","file","handleInputChange","handleDragOver","handleDragLeave","handleDrop","glbFile","handleExplodeToggle","newState","handlePartSelectInternal","partName","jsxs","Canvas","Environment","Suspense","OrbitControls","Fragment","main_default","useBreakGLB","isLoading","setIsLoading","error","setError","explode","assemble","toggleExplode","selectPart","partId","clearError","useModelControls","ref","id","useKeyboardShortcuts","shortcuts","callbacks","handleKeyDown","key","useFileUpload","onUpload","options","handleFileSelect","maxSize","allowedExtensions","fileName","ext","files","f","useAnimationFrame","callback","deps","requestRef","previousTimeRef","animate","time","deltaTime","useLocalStorage","initialValue","storedValue","setStoredValue","item","setValue","value","easingFunctions","t","generateUniqueId","clamp","min","max","lerp","start","end","validateProps","props","warnings","hexToRgb","hex","result","rgbToHex","r","g","b","x","validateGLBFile","validExtensions","PerformanceMonitor","currentTime","storage","defaultValue","message","ErrorDisplay","onRetry","onDismiss","UploadZone","onFileSelect","inputRef","React","ControlPanel","showUploadButton","ANIMATION_PRESETS"],"mappings":"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","file":"index.mjs","sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { Suspense, useRef, useState, useEffect, useCallback } from \"react\"\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\"\r\nimport { OrbitControls, useGLTF, Environment } from \"@react-three/drei\"\r\nimport * as THREE from \"three\"\r\n\r\n// ============================================================================\r\n// TypeScript Interfaces\r\n// ============================================================================\r\n\r\nexport interface BreakGLBProps {\r\n  // Model Source\r\n  modelUrl?: string\r\n\r\n  // Visual Customization\r\n  backgroundColor?: string\r\n  ambientLightIntensity?: number\r\n  directionalLightIntensity?: number\r\n  shadowsEnabled?: boolean\r\n  cameraFov?: number\r\n  cameraPosition?: [number, number, number]\r\n\r\n  // Animation Parameters\r\n  explosionDistance?: number\r\n  explosionSpeed?: number\r\n  animationEasing?: \"linear\" | \"easeInOut\" | \"easeOut\"\r\n\r\n  // Behavior Toggles\r\n  showUploadUI?: boolean\r\n  showControls?: boolean\r\n  autoExplode?: boolean\r\n  enablePartSelection?: boolean\r\n  enableLightControl?: boolean\r\n\r\n  // Camera Controls\r\n  enableRotate?: boolean\r\n  enableZoom?: boolean\r\n  enablePan?: boolean\r\n  minDistance?: number\r\n  maxDistance?: number\r\n\r\n  // Lifecycle Callbacks\r\n  onLoad?: (model: THREE.Group) => void\r\n  onLoadError?: (error: Error) => void\r\n  onExplode?: () => void\r\n  onAssemble?: () => void\r\n  onPartSelect?: (partName: string | null) => void\r\n\r\n  // Style Overrides\r\n  className?: string\r\n  containerStyle?: React.CSSProperties\r\n}\r\n\r\ninterface ModelProps {\r\n  url: string\r\n  isExploded: boolean\r\n  selectedPart: string | null\r\n  onPartSelect: (partName: string | null) => void\r\n  onExplodeComplete?: () => void\r\n  lightPosition: THREE.Vector3\r\n  explosionDistance: number\r\n  enablePartSelection: boolean\r\n}\r\n\r\ninterface Part {\r\n  object: THREE.Object3D\r\n  originalPosition: THREE.Vector3\r\n  explodedPosition: THREE.Vector3\r\n  currentPosition: THREE.Vector3\r\n  velocity: THREE.Vector3\r\n  angularVelocity: THREE.Euler\r\n  originalRotation: THREE.Euler\r\n  name: string\r\n  center: THREE.Vector3\r\n  floatOffset: number\r\n  rotationSpeed: number\r\n  bobSpeed: number\r\n  boundingBox: THREE.Box3\r\n  collisionRadius: number\r\n  isDragging: boolean\r\n  collisionMesh: THREE.Mesh | null\r\n  grabOffset: THREE.Vector3\r\n}\r\n\r\n// ============================================================================\r\n// Internal Model Component\r\n// ============================================================================\r\n\r\nfunction Model({ url, isExploded, selectedPart, onPartSelect, onExplodeComplete, lightPosition, explosionDistance, enablePartSelection }: ModelProps) {\r\n  const { scene } = useGLTF(url)\r\n  const groupRef = useRef<THREE.Group>(null)\r\n  const [parts, setParts] = useState<Part[]>([])\r\n  const { camera, controls, gl, raycaster, pointer } = useThree()\r\n  const hasExplodedRef = useRef(false)\r\n\r\n  const draggedPartRef = useRef<Part | null>(null)\r\n  const dragPlaneRef = useRef<THREE.Plane>(new THREE.Plane())\r\n  const dragOffsetRef = useRef<THREE.Vector3>(new THREE.Vector3())\r\n  const pointerDownRef = useRef(false)\r\n  const pointerDownTimeRef = useRef(0)\r\n  const previousDragPositionRef = useRef<THREE.Vector3>(new THREE.Vector3())\r\n  const grabPointRef = useRef<THREE.Vector3>(new THREE.Vector3())\r\n  const hasMovedRef = useRef(false)\r\n  const initialPositionRef = useRef<THREE.Vector3>(new THREE.Vector3())\r\n\r\n  useEffect(() => {\r\n    if (!scene) return\r\n\r\n    const explodableParts: Part[] = []\r\n\r\n    const findParts = (obj: THREE.Object3D, depth = 0) => {\r\n      if (obj.type === \"Scene\") {\r\n        obj.children.forEach((child) => findParts(child, depth + 1))\r\n        return\r\n      }\r\n\r\n      if (obj.type === \"Group\") {\r\n        const directMeshes = obj.children.filter((child) => child.type === \"Mesh\")\r\n\r\n        if (directMeshes.length > 0) {\r\n          const box = new THREE.Box3()\r\n          box.setFromObject(obj)\r\n          const center = box.getCenter(new THREE.Vector3())\r\n          const size = box.getSize(new THREE.Vector3())\r\n\r\n          const collisionRadius = Math.max(size.x, size.y, size.z) * 0.45\r\n\r\n          const modelBox = new THREE.Box3().setFromObject(scene)\r\n          const modelCenter = modelBox.getCenter(new THREE.Vector3())\r\n\r\n          let direction = center.clone().sub(modelCenter)\r\n          if (direction.length() < 0.1) {\r\n            direction =\r\n              obj.position.length() > 0.1\r\n                ? obj.position.clone().normalize()\r\n                : new THREE.Vector3((Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2)\r\n          }\r\n          direction.normalize()\r\n\r\n          const distance = explosionDistance + Math.random() * 0.8 + collisionRadius * 1.2\r\n          const explodedPosition = obj.position.clone().add(direction.multiplyScalar(distance))\r\n\r\n          let collisionMesh: THREE.Mesh | null = null\r\n          if (directMeshes.length > 0 && directMeshes[0] instanceof THREE.Mesh) {\r\n            collisionMesh = directMeshes[0] as THREE.Mesh\r\n          }\r\n\r\n          explodableParts.push({\r\n            object: obj,\r\n            originalPosition: obj.position.clone(),\r\n            explodedPosition: explodedPosition,\r\n            currentPosition: obj.position.clone(),\r\n            velocity: new THREE.Vector3(),\r\n            angularVelocity: new THREE.Euler(0, 0, 0),\r\n            originalRotation: obj.rotation.clone(),\r\n            name: obj.name || `part-${explodableParts.length}`,\r\n            center,\r\n            floatOffset: Math.random() * Math.PI * 2,\r\n            rotationSpeed: (Math.random() - 0.5) * 0.5,\r\n            bobSpeed: 0.2 + Math.random() * 0.2,\r\n            boundingBox: box.clone(),\r\n            collisionRadius,\r\n            isDragging: false,\r\n            collisionMesh,\r\n            grabOffset: new THREE.Vector3(),\r\n          })\r\n\r\n          return\r\n        }\r\n\r\n        if (obj.children.length > 0) {\r\n          obj.children.forEach((child) => findParts(child, depth + 1))\r\n          return\r\n        }\r\n      }\r\n\r\n      if (obj.type === \"Mesh\" && obj.name && obj.name.length > 0) {\r\n        const box = new THREE.Box3()\r\n        box.setFromObject(obj)\r\n        const center = box.getCenter(new THREE.Vector3())\r\n        const size = box.getSize(new THREE.Vector3())\r\n\r\n        const collisionRadius = Math.max(size.x, size.y, size.z) * 0.45\r\n\r\n        const modelBox = new THREE.Box3().setFromObject(scene)\r\n        const modelCenter = modelBox.getCenter(new THREE.Vector3())\r\n\r\n        let direction = center.clone().sub(modelCenter)\r\n        if (direction.length() < 0.1) {\r\n          direction =\r\n            obj.position.length() > 0.1\r\n              ? obj.position.clone().normalize()\r\n              : new THREE.Vector3((Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2)\r\n        }\r\n        direction.normalize()\r\n\r\n        const distance = explosionDistance * 0.8 + Math.random() * 0.6 + collisionRadius * 1.2\r\n        const explodedPosition = obj.position.clone().add(direction.multiplyScalar(distance))\r\n\r\n        explodableParts.push({\r\n          object: obj,\r\n          originalPosition: obj.position.clone(),\r\n          explodedPosition: explodedPosition,\r\n          currentPosition: obj.position.clone(),\r\n          velocity: new THREE.Vector3(),\r\n          angularVelocity: new THREE.Euler(0, 0, 0),\r\n          originalRotation: obj.rotation.clone(),\r\n          name: obj.name,\r\n          center,\r\n          floatOffset: Math.random() * Math.PI * 2,\r\n          rotationSpeed: (Math.random() - 0.5) * 0.5,\r\n          bobSpeed: 0.2 + Math.random() * 0.2,\r\n          boundingBox: box.clone(),\r\n          collisionRadius,\r\n          isDragging: false,\r\n          collisionMesh: obj instanceof THREE.Mesh ? obj : null,\r\n          grabOffset: new THREE.Vector3(),\r\n        })\r\n      }\r\n\r\n      obj.children.forEach((child) => findParts(child, depth + 1))\r\n    }\r\n\r\n    findParts(scene)\r\n    setParts(explodableParts)\r\n  }, [scene, explosionDistance])\r\n\r\n  useEffect(() => {\r\n    if (!enablePartSelection) return\r\n\r\n    const canvas = gl.domElement\r\n\r\n    const handlePointerDown = (event: PointerEvent) => {\r\n      pointerDownRef.current = true\r\n      pointerDownTimeRef.current = Date.now()\r\n      hasMovedRef.current = false\r\n\r\n      const rect = canvas.getBoundingClientRect()\r\n      pointer.x = ((event.clientX - rect.left) / rect.width) * 2 - 1\r\n      pointer.y = -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n\r\n      raycaster.setFromCamera(pointer, camera)\r\n      const intersects = raycaster.intersectObjects(scene.children, true)\r\n\r\n      if (intersects.length > 0) {\r\n        const clickedObject = intersects[0].object\r\n        const part = parts.find((p) => {\r\n          let current: THREE.Object3D | null = clickedObject\r\n          while (current) {\r\n            if (current === p.object) return true\r\n            current = current.parent\r\n          }\r\n          return false\r\n        })\r\n\r\n        if (part) {\r\n          event.stopPropagation()\r\n          event.preventDefault()\r\n\r\n          if (controls) {\r\n            ;(controls as any).enabled = false\r\n          }\r\n\r\n          const normal = camera.position.clone().sub(part.object.position).normalize()\r\n          dragPlaneRef.current.setFromNormalAndCoplanarPoint(normal, part.object.position)\r\n\r\n          const intersection = new THREE.Vector3()\r\n          raycaster.ray.intersectPlane(dragPlaneRef.current, intersection)\r\n          dragOffsetRef.current.copy(part.object.position).sub(intersection)\r\n\r\n          grabPointRef.current.copy(intersects[0].point).sub(part.object.position)\r\n          part.grabOffset.copy(grabPointRef.current)\r\n          previousDragPositionRef.current.copy(intersection)\r\n          initialPositionRef.current.copy(part.object.position)\r\n\r\n          draggedPartRef.current = part\r\n          part.isDragging = true\r\n        }\r\n      }\r\n    }\r\n\r\n    const handlePointerMove = (event: PointerEvent) => {\r\n      if (!pointerDownRef.current || !draggedPartRef.current) return\r\n\r\n      event.stopPropagation()\r\n      event.preventDefault()\r\n\r\n      const holdTime = Date.now() - pointerDownTimeRef.current\r\n      if (holdTime < 150) return\r\n\r\n      const rect = canvas.getBoundingClientRect()\r\n      pointer.x = ((event.clientX - rect.left) / rect.width) * 2 - 1\r\n      pointer.y = -((event.clientY - rect.top) / rect.height) * 2 + 1\r\n\r\n      raycaster.setFromCamera(pointer, camera)\r\n      const intersection = new THREE.Vector3()\r\n      if (raycaster.ray.intersectPlane(dragPlaneRef.current, intersection)) {\r\n        const newPosition = intersection.add(dragOffsetRef.current)\r\n\r\n        if (newPosition.distanceTo(initialPositionRef.current) > 0.01) {\r\n          hasMovedRef.current = true\r\n        }\r\n\r\n        const dragDelta = intersection.clone().sub(previousDragPositionRef.current)\r\n        const torqueArm = draggedPartRef.current.grabOffset\r\n        const torque = new THREE.Vector3().crossVectors(torqueArm, dragDelta)\r\n\r\n        draggedPartRef.current.angularVelocity.x += torque.x * 2\r\n        draggedPartRef.current.angularVelocity.y += torque.y * 2\r\n        draggedPartRef.current.angularVelocity.z += torque.z * 2\r\n\r\n        previousDragPositionRef.current.copy(intersection)\r\n\r\n        draggedPartRef.current.object.position.copy(newPosition)\r\n        draggedPartRef.current.currentPosition.copy(newPosition)\r\n      }\r\n    }\r\n\r\n    const handlePointerUp = (event: PointerEvent) => {\r\n      const holdTime = Date.now() - pointerDownTimeRef.current\r\n\r\n      if (draggedPartRef.current) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n      }\r\n\r\n      if (holdTime < 150 && draggedPartRef.current && !hasMovedRef.current) {\r\n        const part = draggedPartRef.current\r\n        onPartSelect(selectedPart === part.name ? null : part.name)\r\n\r\n        if (selectedPart !== part.name) {\r\n          const box = new THREE.Box3().setFromObject(part.object)\r\n          const center = box.getCenter(new THREE.Vector3())\r\n          const size = box.getSize(new THREE.Vector3())\r\n          const maxDim = Math.max(size.x, size.y, size.z)\r\n          const distance = maxDim * 2.5\r\n\r\n          const direction = camera.position.clone().sub(center).normalize()\r\n          const newPosition = center.clone().add(direction.multiplyScalar(distance))\r\n\r\n          const startPosition = camera.position.clone()\r\n          const startTime = Date.now()\r\n          const duration = 1000\r\n\r\n          const animateCamera = () => {\r\n            const elapsed = Date.now() - startTime\r\n            const progress = Math.min(elapsed / duration, 1)\r\n            const eased = 1 - Math.pow(1 - progress, 3)\r\n\r\n            camera.position.lerpVectors(startPosition, newPosition, eased)\r\n            camera.lookAt(center)\r\n\r\n            if (progress < 1) {\r\n              requestAnimationFrame(animateCamera)\r\n            }\r\n          }\r\n\r\n          animateCamera()\r\n        }\r\n      }\r\n\r\n      pointerDownRef.current = false\r\n      hasMovedRef.current = false\r\n      if (draggedPartRef.current) {\r\n        draggedPartRef.current.isDragging = false\r\n        draggedPartRef.current = null\r\n      }\r\n\r\n      if (controls) {\r\n        ;(controls as any).enabled = true\r\n      }\r\n    }\r\n\r\n    canvas.addEventListener(\"pointerdown\", handlePointerDown, true)\r\n    canvas.addEventListener(\"pointermove\", handlePointerMove, true)\r\n    canvas.addEventListener(\"pointerup\", handlePointerUp, true)\r\n    canvas.addEventListener(\"pointercancel\", handlePointerUp, true)\r\n\r\n    return () => {\r\n      canvas.removeEventListener(\"pointerdown\", handlePointerDown, true)\r\n      canvas.removeEventListener(\"pointermove\", handlePointerMove, true)\r\n      canvas.removeEventListener(\"pointerup\", handlePointerUp, true)\r\n      canvas.removeEventListener(\"pointercancel\", handlePointerUp, true)\r\n    }\r\n  }, [parts, camera, scene, gl, raycaster, pointer, controls, selectedPart, onPartSelect, enablePartSelection])\r\n\r\n  useEffect(() => {\r\n    if (!scene || parts.length === 0) return\r\n\r\n    const box = new THREE.Box3()\r\n\r\n    if (isExploded) {\r\n      parts.forEach((part) => {\r\n        const partBox = new THREE.Box3().setFromObject(part.object)\r\n        const explodedBox = partBox.clone()\r\n        explodedBox.translate(part.explodedPosition.clone().sub(part.originalPosition))\r\n        box.union(explodedBox)\r\n      })\r\n    } else {\r\n      box.setFromObject(scene)\r\n    }\r\n\r\n    const size = box.getSize(new THREE.Vector3())\r\n    const center = box.getCenter(new THREE.Vector3())\r\n\r\n    const maxDim = Math.max(size.x, size.y, size.z)\r\n    const fov = camera instanceof THREE.PerspectiveCamera ? camera.fov : 50\r\n    const cameraDistance = maxDim / (2 * Math.tan((fov * Math.PI) / 360))\r\n\r\n    const distance = cameraDistance * 1.8\r\n    camera.position.set(distance, distance * 0.7, distance)\r\n    camera.lookAt(center)\r\n\r\n    if (controls && \"target\" in controls) {\r\n      ;(controls as any).target.copy(center)\r\n      ;(controls as any).update()\r\n    }\r\n\r\n    camera.updateProjectionMatrix()\r\n  }, [scene, camera, controls, parts, isExploded])\r\n\r\n  useFrame((state, delta) => {\r\n    if (!groupRef.current || parts.length === 0) return\r\n\r\n    let allSettled = true\r\n\r\n    parts.forEach((part, index) => {\r\n      const {\r\n        object,\r\n        originalPosition,\r\n        explodedPosition,\r\n        currentPosition,\r\n        velocity,\r\n        isDragging,\r\n        angularVelocity,\r\n        originalRotation,\r\n      } = part\r\n\r\n      if (isDragging) {\r\n        object.rotation.x += angularVelocity.x * delta\r\n        object.rotation.y += angularVelocity.y * delta\r\n        object.rotation.z += angularVelocity.z * delta\r\n\r\n        angularVelocity.x *= 0.95\r\n        angularVelocity.y *= 0.95\r\n        angularVelocity.z *= 0.95\r\n        return\r\n      }\r\n\r\n      const targetPosition = isExploded ? explodedPosition : originalPosition\r\n\r\n      const distanceFromTarget = currentPosition.distanceTo(targetPosition)\r\n      const maxDistance = 8\r\n\r\n      if (distanceFromTarget > 0.01) {\r\n        allSettled = false\r\n      }\r\n\r\n      const attractionStrength = Math.min(distanceFromTarget / maxDistance, 1) * 0.008\r\n      const attractionForce = targetPosition.clone().sub(currentPosition).multiplyScalar(attractionStrength)\r\n      velocity.add(attractionForce)\r\n\r\n      parts.forEach((otherPart, otherIndex) => {\r\n        if (index === otherIndex || otherPart.isDragging) return\r\n\r\n        const distance = currentPosition.distanceTo(otherPart.currentPosition)\r\n        const minDistance = part.collisionRadius + otherPart.collisionRadius\r\n\r\n        if (distance < minDistance * 1.1) {\r\n          const partBox = part.boundingBox.clone()\r\n          partBox.translate(currentPosition.clone().sub(part.originalPosition))\r\n\r\n          const otherBox = otherPart.boundingBox.clone()\r\n          otherBox.translate(otherPart.currentPosition.clone().sub(otherPart.originalPosition))\r\n\r\n          if (partBox.intersectsBox(otherBox)) {\r\n            const repulsionDirection = currentPosition.clone().sub(otherPart.currentPosition).normalize()\r\n            const overlap = minDistance - distance\r\n\r\n            const repulsionForce = repulsionDirection.multiplyScalar(overlap * 0.08)\r\n\r\n            const relativeVelocity = velocity.clone().sub(otherPart.velocity)\r\n            const velocityAlongNormal = relativeVelocity.dot(repulsionDirection)\r\n\r\n            if (velocityAlongNormal < 0) {\r\n              const impulse = repulsionDirection.multiplyScalar(velocityAlongNormal * 0.5)\r\n              velocity.sub(impulse)\r\n            }\r\n\r\n            velocity.add(repulsionForce)\r\n          }\r\n        }\r\n      })\r\n\r\n      currentPosition.add(velocity)\r\n      velocity.multiplyScalar(0.92)\r\n\r\n      object.position.copy(currentPosition)\r\n\r\n      if (isExploded) {\r\n        const bobAmount = Math.sin(state.clock.elapsedTime * part.bobSpeed + part.floatOffset) * 0.03\r\n        object.position.y += bobAmount * delta * 5\r\n\r\n        object.rotation.x += angularVelocity.x * delta + part.rotationSpeed * 0.3 * delta\r\n        object.rotation.y += angularVelocity.y * delta + part.rotationSpeed * delta\r\n        object.rotation.z += angularVelocity.z * delta + part.rotationSpeed * 0.2 * delta\r\n\r\n        angularVelocity.x *= 0.98\r\n        angularVelocity.y *= 0.98\r\n        angularVelocity.z *= 0.98\r\n      } else {\r\n        object.rotation.x += (originalRotation.x - object.rotation.x) * 0.1\r\n        object.rotation.y += (originalRotation.y - object.rotation.y) * 0.1\r\n        object.rotation.z += (originalRotation.z - object.rotation.z) * 0.1\r\n\r\n        angularVelocity.x *= 0.9\r\n        angularVelocity.y *= 0.9\r\n        angularVelocity.z *= 0.9\r\n      }\r\n    })\r\n\r\n    if (allSettled && isExploded && !hasExplodedRef.current) {\r\n      hasExplodedRef.current = true\r\n      onExplodeComplete?.()\r\n    } else if (!isExploded) {\r\n      hasExplodedRef.current = false\r\n    }\r\n  })\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      <primitive object={scene} />\r\n    </group>\r\n  )\r\n}\r\n\r\nfunction LoadingFallback() {\r\n  return null\r\n}\r\n\r\n// ============================================================================\r\n// Main BreakGLB Component\r\n// ============================================================================\r\n\r\nexport function BreakGLB({\r\n  modelUrl,\r\n  backgroundColor = \"#000000\",\r\n  ambientLightIntensity = 0.3,\r\n  directionalLightIntensity = 1.2,\r\n  shadowsEnabled = true,\r\n  cameraFov = 50,\r\n  cameraPosition = [5, 5, 5],\r\n  explosionDistance = 1.5,\r\n  explosionSpeed = 800,\r\n  animationEasing = \"easeInOut\",\r\n  showUploadUI = true,\r\n  showControls = true,\r\n  autoExplode = false,\r\n  enablePartSelection = true,\r\n  enableLightControl = true,\r\n  enableRotate = true,\r\n  enableZoom = true,\r\n  enablePan = true,\r\n  minDistance = 2,\r\n  maxDistance = 20,\r\n  onLoad,\r\n  onLoadError,\r\n  onExplode,\r\n  onAssemble,\r\n  onPartSelect,\r\n  className,\r\n  containerStyle,\r\n}: BreakGLBProps) {\r\n  const [internalModelUrl, setInternalModelUrl] = useState<string | null>(modelUrl || null)\r\n  const [isExploded, setIsExploded] = useState(autoExplode)\r\n  const [selectedPart, setSelectedPart] = useState<string | null>(null)\r\n  const [isDragging, setIsDragging] = useState(false)\r\n  const [lightPosition, setLightPosition] = useState(new THREE.Vector3(10, 10, 5))\r\n  const fileInputRef = useRef<HTMLInputElement>(null)\r\n  const touchStartRef = useRef<{ x: number; y: number } | null>(null)\r\n  const isThreeFingerRef = useRef(false)\r\n  const isRightDraggingRef = useRef(false)\r\n  const rightDragStartRef = useRef<{ x: number; y: number } | null>(null)\r\n\r\n  // Update internal URL when prop changes\r\n  useEffect(() => {\r\n    if (modelUrl) {\r\n      setInternalModelUrl(modelUrl)\r\n    }\r\n  }, [modelUrl])\r\n\r\n  // Light control handlers\r\n  useEffect(() => {\r\n    if (!enableLightControl) return\r\n\r\n    const handleTouchStart = (e: TouchEvent) => {\r\n      if (e.touches.length === 3) {\r\n        isThreeFingerRef.current = true\r\n        const touch = e.touches[0]\r\n        touchStartRef.current = { x: touch.clientX, y: touch.clientY }\r\n        e.preventDefault()\r\n      }\r\n    }\r\n\r\n    const handleTouchMove = (e: TouchEvent) => {\r\n      if (e.touches.length === 3 && isThreeFingerRef.current && touchStartRef.current) {\r\n        const touch = e.touches[0]\r\n        const deltaX = (touch.clientX - touchStartRef.current.x) * 0.05\r\n        const deltaY = (touch.clientY - touchStartRef.current.y) * 0.05\r\n\r\n        setLightPosition((prev) => {\r\n          const newPos = prev.clone()\r\n          newPos.x += deltaX\r\n          newPos.y -= deltaY\r\n          return newPos\r\n        })\r\n\r\n        touchStartRef.current = { x: touch.clientX, y: touch.clientY }\r\n        e.preventDefault()\r\n      }\r\n    }\r\n\r\n    const handleTouchEnd = (e: TouchEvent) => {\r\n      if (e.touches.length < 3) {\r\n        isThreeFingerRef.current = false\r\n        touchStartRef.current = null\r\n      }\r\n    }\r\n\r\n    const handleMouseDown = (e: MouseEvent) => {\r\n      if (e.button === 2) {\r\n        isRightDraggingRef.current = true\r\n        rightDragStartRef.current = { x: e.clientX, y: e.clientY }\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n      }\r\n    }\r\n\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      if (isRightDraggingRef.current && rightDragStartRef.current) {\r\n        const deltaX = (e.clientX - rightDragStartRef.current.x) * 0.05\r\n        const deltaY = (e.clientY - rightDragStartRef.current.y) * 0.05\r\n\r\n        setLightPosition((prev) => {\r\n          const newPos = prev.clone()\r\n          newPos.x += deltaX\r\n          newPos.y -= deltaY\r\n          return newPos\r\n        })\r\n\r\n        rightDragStartRef.current = { x: e.clientX, y: e.clientY }\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n      }\r\n    }\r\n\r\n    const handleMouseUp = (e: MouseEvent) => {\r\n      if (e.button === 2 && isRightDraggingRef.current) {\r\n        isRightDraggingRef.current = false\r\n        rightDragStartRef.current = null\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n      }\r\n    }\r\n\r\n    const handleContextMenu = (e: MouseEvent) => {\r\n      e.preventDefault()\r\n    }\r\n\r\n    window.addEventListener(\"touchstart\", handleTouchStart, { passive: false })\r\n    window.addEventListener(\"touchmove\", handleTouchMove, { passive: false })\r\n    window.addEventListener(\"touchend\", handleTouchEnd)\r\n    window.addEventListener(\"mousedown\", handleMouseDown, true)\r\n    window.addEventListener(\"mousemove\", handleMouseMove, true)\r\n    window.addEventListener(\"mouseup\", handleMouseUp, true)\r\n    window.addEventListener(\"contextmenu\", handleContextMenu)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"touchstart\", handleTouchStart)\r\n      window.removeEventListener(\"touchmove\", handleTouchMove)\r\n      window.removeEventListener(\"touchend\", handleTouchEnd)\r\n      window.removeEventListener(\"mousedown\", handleMouseDown, true)\r\n      window.removeEventListener(\"mousemove\", handleMouseMove, true)\r\n      window.removeEventListener(\"mouseup\", handleMouseUp, true)\r\n      window.removeEventListener(\"contextmenu\", handleContextMenu)\r\n    }\r\n  }, [enableLightControl])\r\n\r\n  const handleFileUpload = useCallback(\r\n    (file: File) => {\r\n      if (file && file.name.toLowerCase().endsWith(\".glb\")) {\r\n        if (internalModelUrl) {\r\n          URL.revokeObjectURL(internalModelUrl)\r\n        }\r\n        const url = URL.createObjectURL(file)\r\n        setInternalModelUrl(url)\r\n        setIsExploded(autoExplode)\r\n        setSelectedPart(null)\r\n      }\r\n    },\r\n    [internalModelUrl, autoExplode],\r\n  )\r\n\r\n  const handleInputChange = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const file = event.target.files?.[0]\r\n      if (file) {\r\n        handleFileUpload(file)\r\n      }\r\n    },\r\n    [handleFileUpload],\r\n  )\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    setIsDragging(true)\r\n  }, [])\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    setIsDragging(false)\r\n  }, [])\r\n\r\n  const handleDrop = useCallback(\r\n    (e: React.DragEvent) => {\r\n      e.preventDefault()\r\n      setIsDragging(false)\r\n\r\n      const files = Array.from(e.dataTransfer.files)\r\n      const glbFile = files.find((file) => file.name.toLowerCase().endsWith(\".glb\"))\r\n\r\n      if (glbFile) {\r\n        handleFileUpload(glbFile)\r\n      }\r\n    },\r\n    [handleFileUpload],\r\n  )\r\n\r\n  const handleExplodeToggle = useCallback(() => {\r\n    const newState = !isExploded\r\n    setIsExploded(newState)\r\n    if (newState) {\r\n      onExplode?.()\r\n    } else {\r\n      onAssemble?.()\r\n    }\r\n  }, [isExploded, onExplode, onAssemble])\r\n\r\n  const handlePartSelectInternal = useCallback(\r\n    (partName: string | null) => {\r\n      setSelectedPart(partName)\r\n      onPartSelect?.(partName)\r\n    },\r\n    [onPartSelect],\r\n  )\r\n\r\n  return (\r\n    <div\r\n      className={className || \"h-screen w-screen\"}\r\n      style={{ ...containerStyle, backgroundColor, position: \"relative\", overflow: \"hidden\" }}\r\n      onDragOver={showUploadUI ? handleDragOver : undefined}\r\n      onDragLeave={showUploadUI ? handleDragLeave : undefined}\r\n      onDrop={showUploadUI ? handleDrop : undefined}\r\n    >\r\n      {showUploadUI && isDragging && (\r\n        <div className=\"absolute inset-0 bg-white/10 border-2 border-dashed border-white z-50 flex items-center justify-center\">\r\n          <div className=\"text-2xl font-bold text-white\">Drop GLB file to load</div>\r\n        </div>\r\n      )}\r\n\r\n      {showUploadUI && <input ref={fileInputRef} type=\"file\" accept=\".glb\" onChange={handleInputChange} className=\"hidden\" />}\r\n\r\n      {!internalModelUrl && showUploadUI ? (\r\n        <div className=\"flex items-center justify-center h-full w-full\">\r\n          <div\r\n            className=\"w-full h-full flex items-center justify-center cursor-pointer hover:bg-white/5 transition-colors\"\r\n            onClick={() => fileInputRef.current?.click()}\r\n          >\r\n            <div className=\"text-center\">\r\n              <svg className=\"w-20 h-20 mx-auto mb-4 text-white/50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n                />\r\n              </svg>\r\n              <p className=\"text-xl text-white/70 mb-2\">Upload a 3D Model</p>\r\n              <p className=\"text-sm text-white/50\">GLB format supported</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : internalModelUrl ? (\r\n        <div className=\"h-full w-full relative\">\r\n          <Canvas camera={{ position: cameraPosition, fov: cameraFov }} gl={{ antialias: true, alpha: false }} shadows={shadowsEnabled}>\r\n            <Environment preset=\"studio\" />\r\n            <ambientLight intensity={ambientLightIntensity} />\r\n            <directionalLight\r\n              position={[lightPosition.x, lightPosition.y, lightPosition.z]}\r\n              intensity={directionalLightIntensity}\r\n              castShadow={shadowsEnabled}\r\n              shadow-mapSize-width={2048}\r\n              shadow-mapSize-height={2048}\r\n            />\r\n            <directionalLight position={[-10, -10, -5]} intensity={0.4} />\r\n            <spotLight position={[0, 10, 0]} intensity={0.5} angle={0.6} penumbra={1} castShadow={shadowsEnabled} />\r\n\r\n            <Suspense fallback={<LoadingFallback />}>\r\n              <Model\r\n                url={internalModelUrl}\r\n                isExploded={isExploded}\r\n                selectedPart={selectedPart}\r\n                onPartSelect={handlePartSelectInternal}\r\n                onExplodeComplete={onExplode}\r\n                lightPosition={lightPosition}\r\n                explosionDistance={explosionDistance}\r\n                enablePartSelection={enablePartSelection}\r\n              />\r\n            </Suspense>\r\n\r\n            <OrbitControls\r\n              enablePan={enablePan}\r\n              enableZoom={enableZoom}\r\n              enableRotate={enableRotate}\r\n              minDistance={minDistance}\r\n              maxDistance={maxDistance}\r\n            />\r\n          </Canvas>\r\n\r\n          {showControls && (\r\n            <>\r\n              <div className=\"absolute bottom-6 left-1/2 transform -translate-x-1/2 z-10\">\r\n                <div className=\"flex items-center gap-2 bg-black/50 backdrop-blur-sm border border-white/20 rounded-full px-4 py-2\">\r\n                  {showUploadUI && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => fileInputRef.current?.click()}\r\n                        className=\"p-2 rounded-full text-white hover:bg-white/20 transition-colors\"\r\n                        title=\"Upload new model\"\r\n                      >\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                      <div className=\"w-px h-6 bg-white/20\" />\r\n                    </>\r\n                  )}\r\n                  <button\r\n                    onClick={handleExplodeToggle}\r\n                    className={`p-2 rounded-full text-white transition-colors ${\r\n                      isExploded ? \"bg-white/20\" : \"hover:bg-white/20\"\r\n                    }`}\r\n                    title={isExploded ? \"Assemble\" : \"Explode\"}\r\n                  >\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M13 10V3L4 14h7v7l9-11h-7z\"\r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BreakGLB\r\n","import { useState, useCallback, useEffect, useRef } from \"react\"\r\nimport type { BreakGLBRef, ModelPart } from \"./types\"\r\n\r\n// ============================================================================\r\n// useBreakGLB Hook\r\n// ============================================================================\r\n\r\nexport function useBreakGLB() {\r\n  const [isExploded, setIsExploded] = useState(false)\r\n  const [selectedPart, setSelectedPart] = useState<string | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [parts, setParts] = useState<ModelPart[]>([])\r\n\r\n  const explode = useCallback(() => {\r\n    setIsExploded(true)\r\n  }, [])\r\n\r\n  const assemble = useCallback(() => {\r\n    setIsExploded(false)\r\n  }, [])\r\n\r\n  const toggleExplode = useCallback(() => {\r\n    setIsExploded((prev) => !prev)\r\n  }, [])\r\n\r\n  const selectPart = useCallback((partId: string | null) => {\r\n    setSelectedPart(partId)\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null)\r\n  }, [])\r\n\r\n  return {\r\n    isExploded,\r\n    selectedPart,\r\n    isLoading,\r\n    error,\r\n    parts,\r\n    explode,\r\n    assemble,\r\n    toggleExplode,\r\n    selectPart,\r\n    setIsLoading,\r\n    setError,\r\n    setParts,\r\n    clearError,\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// useModelControls Hook - For imperative control\r\n// ============================================================================\r\n\r\nexport function useModelControls(): [\r\n  React.RefObject<BreakGLBRef | null>,\r\n  {\r\n    explode: () => void\r\n    assemble: () => void\r\n    toggle: () => void\r\n    selectPart: (id: string | null) => void\r\n    resetCamera: () => void\r\n  }\r\n] {\r\n  const ref = useRef<BreakGLBRef | null>(null)\r\n\r\n  const controls = {\r\n    explode: useCallback(() => ref.current?.explode(), []),\r\n    assemble: useCallback(() => ref.current?.assemble(), []),\r\n    toggle: useCallback(() => ref.current?.toggleExplode(), []),\r\n    selectPart: useCallback((id: string | null) => ref.current?.selectPart(id), []),\r\n    resetCamera: useCallback(() => ref.current?.resetCamera(), []),\r\n  }\r\n\r\n  return [ref, controls]\r\n}\r\n\r\n// ============================================================================\r\n// useKeyboardShortcuts Hook\r\n// ============================================================================\r\n\r\nexport interface KeyboardShortcuts {\r\n  explode?: string\r\n  assemble?: string\r\n  toggle?: string\r\n  resetCamera?: string\r\n}\r\n\r\nexport function useKeyboardShortcuts(\r\n  shortcuts: KeyboardShortcuts,\r\n  callbacks: {\r\n    onExplode?: () => void\r\n    onAssemble?: () => void\r\n    onToggle?: () => void\r\n    onResetCamera?: () => void\r\n  }\r\n) {\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      const key = event.key.toLowerCase()\r\n\r\n      if (shortcuts.explode && key === shortcuts.explode.toLowerCase()) {\r\n        event.preventDefault()\r\n        callbacks.onExplode?.()\r\n      } else if (shortcuts.assemble && key === shortcuts.assemble.toLowerCase()) {\r\n        event.preventDefault()\r\n        callbacks.onAssemble?.()\r\n      } else if (shortcuts.toggle && key === shortcuts.toggle.toLowerCase()) {\r\n        event.preventDefault()\r\n        callbacks.onToggle?.()\r\n      } else if (shortcuts.resetCamera && key === shortcuts.resetCamera.toLowerCase()) {\r\n        event.preventDefault()\r\n        callbacks.onResetCamera?.()\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown)\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\r\n  }, [shortcuts, callbacks])\r\n}\r\n\r\n// ============================================================================\r\n// useFileUpload Hook\r\n// ============================================================================\r\n\r\nexport function useFileUpload(\r\n  onUpload: (file: File) => void,\r\n  options?: {\r\n    maxSize?: number\r\n    allowedExtensions?: string[]\r\n  }\r\n) {\r\n  const [isDragging, setIsDragging] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const handleFileSelect = useCallback(\r\n    (file: File) => {\r\n      setError(null)\r\n\r\n      // Validate file size\r\n      const maxSize = options?.maxSize || 100 * 1024 * 1024 // 100MB default\r\n      if (file.size > maxSize) {\r\n        setError(`File too large. Maximum size is ${maxSize / 1024 / 1024}MB`)\r\n        return\r\n      }\r\n\r\n      // Validate file extension\r\n      const allowedExtensions = options?.allowedExtensions || [\".glb\"]\r\n      const fileName = file.name.toLowerCase()\r\n      const isValidExtension = allowedExtensions.some((ext) => fileName.endsWith(ext))\r\n\r\n      if (!isValidExtension) {\r\n        setError(`Invalid file format. Allowed: ${allowedExtensions.join(\", \")}`)\r\n        return\r\n      }\r\n\r\n      onUpload(file)\r\n    },\r\n    [onUpload, options]\r\n  )\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    setIsDragging(true)\r\n  }, [])\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    setIsDragging(false)\r\n  }, [])\r\n\r\n  const handleDrop = useCallback(\r\n    (e: React.DragEvent) => {\r\n      e.preventDefault()\r\n      setIsDragging(false)\r\n\r\n      const files = Array.from(e.dataTransfer.files)\r\n      const allowedExtensions = options?.allowedExtensions || [\".glb\"]\r\n      const file = files.find((f) =>\r\n        allowedExtensions.some((ext) => f.name.toLowerCase().endsWith(ext))\r\n      )\r\n\r\n      if (file) {\r\n        handleFileSelect(file)\r\n      } else {\r\n        setError(`No valid file found. Allowed: ${allowedExtensions.join(\", \")}`)\r\n      }\r\n    },\r\n    [handleFileSelect, options]\r\n  )\r\n\r\n  return {\r\n    isDragging,\r\n    error,\r\n    handleFileSelect,\r\n    handleDragOver,\r\n    handleDragLeave,\r\n    handleDrop,\r\n    clearError: () => setError(null),\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// useAnimationFrame Hook\r\n// ============================================================================\r\n\r\nexport function useAnimationFrame(callback: (deltaTime: number) => void, deps: any[] = []) {\r\n  const requestRef = useRef<number | undefined>(undefined)\r\n  const previousTimeRef = useRef<number | undefined>(undefined)\r\n\r\n  const animate = useCallback(\r\n    (time: number) => {\r\n      if (previousTimeRef.current !== undefined) {\r\n        const deltaTime = time - previousTimeRef.current\r\n        callback(deltaTime)\r\n      }\r\n      previousTimeRef.current = time\r\n      requestRef.current = requestAnimationFrame(animate)\r\n    },\r\n    [callback]\r\n  )\r\n\r\n  useEffect(() => {\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => {\r\n      if (requestRef.current) {\r\n        cancelAnimationFrame(requestRef.current)\r\n      }\r\n    }\r\n  }, [animate])\r\n}\r\n\r\n// ============================================================================\r\n// useLocalStorage Hook\r\n// ============================================================================\r\n\r\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, (value: T) => void] {\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key)\r\n      return item ? JSON.parse(item) : initialValue\r\n    } catch (error) {\r\n      console.warn(`Error loading ${key} from localStorage:`, error)\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  const setValue = useCallback(\r\n    (value: T) => {\r\n      try {\r\n        setStoredValue(value)\r\n        window.localStorage.setItem(key, JSON.stringify(value))\r\n      } catch (error) {\r\n        console.warn(`Error saving ${key} to localStorage:`, error)\r\n      }\r\n    },\r\n    [key]\r\n  )\r\n\r\n  return [storedValue, setValue]\r\n}\r\n","import type { AnimationConfig } from \"./types\"\r\n\r\n// ============================================================================\r\n// Easing Functions\r\n// ============================================================================\r\n\r\nexport const easingFunctions = {\r\n  linear: (t: number) => t,\r\n\r\n  easeIn: (t: number) => t * t * t,\r\n\r\n  easeOut: (t: number) => 1 - Math.pow(1 - t, 3),\r\n\r\n  easeInOut: (t: number) => (t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2),\r\n\r\n  bounce: (t: number) => {\r\n    const n1 = 7.5625\r\n    const d1 = 2.75\r\n\r\n    if (t < 1 / d1) {\r\n      return n1 * t * t\r\n    } else if (t < 2 / d1) {\r\n      return n1 * (t -= 1.5 / d1) * t + 0.75\r\n    } else if (t < 2.5 / d1) {\r\n      return n1 * (t -= 2.25 / d1) * t + 0.9375\r\n    } else {\r\n      return n1 * (t -= 2.625 / d1) * t + 0.984375\r\n    }\r\n  },\r\n}\r\n\r\n// ============================================================================\r\n// Helper Functions\r\n// ============================================================================\r\n\r\nexport function generateUniqueId(): string {\r\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number): number {\r\n  return Math.min(Math.max(value, min), max)\r\n}\r\n\r\nexport function lerp(start: number, end: number, t: number): number {\r\n  return start + (end - start) * t\r\n}\r\n\r\nexport function validateProps(props: any): { valid: boolean; warnings: string[] } {\r\n  const warnings: string[] = []\r\n\r\n  if (props.explosionDistance !== undefined && props.explosionDistance < 0) {\r\n    warnings.push(\"explosionDistance should be positive\")\r\n  }\r\n\r\n  if (props.explosionSpeed !== undefined && props.explosionSpeed < 100) {\r\n    warnings.push(\"explosionSpeed should be at least 100ms for smooth animations\")\r\n  }\r\n\r\n  if (props.minDistance !== undefined && props.maxDistance !== undefined) {\r\n    if (props.minDistance >= props.maxDistance) {\r\n      warnings.push(\"minDistance should be less than maxDistance\")\r\n    }\r\n  }\r\n\r\n  if (props.ambientLightIntensity !== undefined && props.ambientLightIntensity < 0) {\r\n    warnings.push(\"ambientLightIntensity should be non-negative\")\r\n  }\r\n\r\n  if (props.directionalLightIntensity !== undefined && props.directionalLightIntensity < 0) {\r\n    warnings.push(\"directionalLightIntensity should be non-negative\")\r\n  }\r\n\r\n  return {\r\n    valid: warnings.length === 0,\r\n    warnings,\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// Color Utilities\r\n// ============================================================================\r\n\r\nexport function hexToRgb(hex: string): { r: number; g: number; b: number } | null {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16) / 255,\r\n        g: parseInt(result[2], 16) / 255,\r\n        b: parseInt(result[3], 16) / 255,\r\n      }\r\n    : null\r\n}\r\n\r\nexport function rgbToHex(r: number, g: number, b: number): string {\r\n  return (\r\n    \"#\" +\r\n    [r, g, b]\r\n      .map((x) => {\r\n        const hex = Math.round(x * 255).toString(16)\r\n        return hex.length === 1 ? \"0\" + hex : hex\r\n      })\r\n      .join(\"\")\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// File Validation\r\n// ============================================================================\r\n\r\nexport function validateGLBFile(file: File): { valid: boolean; error?: string } {\r\n  if (!file) {\r\n    return { valid: false, error: \"No file provided\" }\r\n  }\r\n\r\n  const validExtensions = [\".glb\"]\r\n  const fileName = file.name.toLowerCase()\r\n  const isValidExtension = validExtensions.some((ext) => fileName.endsWith(ext))\r\n\r\n  if (!isValidExtension) {\r\n    return { valid: false, error: \"Invalid file format. Please upload a .glb file\" }\r\n  }\r\n\r\n  // Check file size (limit to 100MB)\r\n  const maxSize = 100 * 1024 * 1024\r\n  if (file.size > maxSize) {\r\n    return { valid: false, error: \"File too large. Maximum size is 100MB\" }\r\n  }\r\n\r\n  return { valid: true }\r\n}\r\n\r\n// ============================================================================\r\n// Performance Monitoring\r\n// ============================================================================\r\n\r\nexport class PerformanceMonitor {\r\n  private frameCount = 0\r\n  private lastTime = performance.now()\r\n  private fps = 60\r\n\r\n  update(): number {\r\n    this.frameCount++\r\n    const currentTime = performance.now()\r\n    const delta = currentTime - this.lastTime\r\n\r\n    if (delta >= 1000) {\r\n      this.fps = Math.round((this.frameCount * 1000) / delta)\r\n      this.frameCount = 0\r\n      this.lastTime = currentTime\r\n    }\r\n\r\n    return this.fps\r\n  }\r\n\r\n  getFPS(): number {\r\n    return this.fps\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// Local Storage Helpers\r\n// ============================================================================\r\n\r\nexport const storage = {\r\n  save(key: string, value: any): void {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value))\r\n    } catch (error) {\r\n      console.warn(\"Failed to save to localStorage:\", error)\r\n    }\r\n  },\r\n\r\n  load<T>(key: string, defaultValue: T): T {\r\n    try {\r\n      const item = localStorage.getItem(key)\r\n      return item ? JSON.parse(item) : defaultValue\r\n    } catch (error) {\r\n      console.warn(\"Failed to load from localStorage:\", error)\r\n      return defaultValue\r\n    }\r\n  },\r\n\r\n  remove(key: string): void {\r\n    try {\r\n      localStorage.removeItem(key)\r\n    } catch (error) {\r\n      console.warn(\"Failed to remove from localStorage:\", error)\r\n    }\r\n  },\r\n}\r\n","import React from \"react\"\r\n\r\n// ============================================================================\r\n// Loading Component\r\n// ============================================================================\r\n\r\ninterface LoadingProps {\r\n  progress?: number\r\n  message?: string\r\n}\r\n\r\nexport function LoadingFallback({ progress, message }: LoadingProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        inset: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n        color: \"white\",\r\n        fontFamily: \"system-ui, -apple-system, sans-serif\",\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: 50,\r\n          height: 50,\r\n          border: \"3px solid rgba(255, 255, 255, 0.1)\",\r\n          borderTop: \"3px solid white\",\r\n          borderRadius: \"50%\",\r\n          animation: \"spin 1s linear infinite\",\r\n        }}\r\n      />\r\n      {message && (\r\n        <p style={{ marginTop: 20, fontSize: 14, opacity: 0.8 }}>{message}</p>\r\n      )}\r\n      {progress !== undefined && (\r\n        <div style={{ marginTop: 15, width: 200 }}>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: 4,\r\n              backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n              borderRadius: 2,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: `${progress}%`,\r\n                height: \"100%\",\r\n                backgroundColor: \"white\",\r\n                transition: \"width 0.3s ease\",\r\n              }}\r\n            />\r\n          </div>\r\n          <p style={{ marginTop: 8, fontSize: 12, opacity: 0.6, textAlign: \"center\" }}>\r\n            {Math.round(progress)}%\r\n          </p>\r\n        </div>\r\n      )}\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// Error Component\r\n// ============================================================================\r\n\r\ninterface ErrorDisplayProps {\r\n  error: Error\r\n  onRetry?: () => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nexport function ErrorDisplay({ error, onRetry, onDismiss }: ErrorDisplayProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        inset: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.9)\",\r\n        color: \"white\",\r\n        fontFamily: \"system-ui, -apple-system, sans-serif\",\r\n        padding: 20,\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <svg\r\n        width=\"64\"\r\n        height=\"64\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        style={{ marginBottom: 20, color: \"#ef4444\" }}\r\n      >\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\r\n      </svg>\r\n\r\n      <h3 style={{ margin: 0, marginBottom: 10, fontSize: 18, fontWeight: 600 }}>\r\n        Failed to Load Model\r\n      </h3>\r\n\r\n      <p\r\n        style={{\r\n          margin: 0,\r\n          marginBottom: 20,\r\n          fontSize: 14,\r\n          opacity: 0.7,\r\n          maxWidth: 400,\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {error.message || \"An unexpected error occurred while loading the 3D model.\"}\r\n      </p>\r\n\r\n      <div style={{ display: \"flex\", gap: 10 }}>\r\n        {onRetry && (\r\n          <button\r\n            onClick={onRetry}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              backgroundColor: \"#3b82f6\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: 6,\r\n              fontSize: 14,\r\n              fontWeight: 500,\r\n              cursor: \"pointer\",\r\n              transition: \"background-color 0.2s\",\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"#2563eb\"\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"#3b82f6\"\r\n            }}\r\n          >\r\n            Try Again\r\n          </button>\r\n        )}\r\n        {onDismiss && (\r\n          <button\r\n            onClick={onDismiss}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n              color: \"white\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n              borderRadius: 6,\r\n              fontSize: 14,\r\n              fontWeight: 500,\r\n              cursor: \"pointer\",\r\n              transition: \"background-color 0.2s\",\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.15)\"\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.1)\"\r\n            }}\r\n          >\r\n            Dismiss\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// Upload Zone Component\r\n// ============================================================================\r\n\r\ninterface UploadZoneProps {\r\n  onFileSelect: (file: File) => void\r\n  isDragging: boolean\r\n}\r\n\r\nexport function UploadZone({ onFileSelect, isDragging }: UploadZoneProps) {\r\n  const inputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (file) {\r\n      onFileSelect(file)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => inputRef.current?.click()}\r\n      style={{\r\n        position: \"absolute\",\r\n        inset: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.2s\",\r\n        backgroundColor: isDragging ? \"rgba(255, 255, 255, 0.05)\" : \"transparent\",\r\n      }}\r\n    >\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        accept=\".glb\"\r\n        onChange={handleFileChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n\r\n      <svg\r\n        width=\"80\"\r\n        height=\"80\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"1.5\"\r\n        style={{\r\n          marginBottom: 20,\r\n          color: \"rgba(255, 255, 255, 0.5)\",\r\n          transition: \"transform 0.2s\",\r\n          transform: isDragging ? \"scale(1.1)\" : \"scale(1)\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n        />\r\n      </svg>\r\n\r\n      <h3\r\n        style={{\r\n          margin: 0,\r\n          marginBottom: 8,\r\n          fontSize: 20,\r\n          fontWeight: 600,\r\n          color: \"rgba(255, 255, 255, 0.9)\",\r\n        }}\r\n      >\r\n        {isDragging ? \"Drop to Upload\" : \"Upload 3D Model\"}\r\n      </h3>\r\n\r\n      <p\r\n        style={{\r\n          margin: 0,\r\n          fontSize: 14,\r\n          color: \"rgba(255, 255, 255, 0.5)\",\r\n        }}\r\n      >\r\n        {isDragging ? \"Release to load\" : \"Click or drag GLB file here\"}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// Control Panel Component\r\n// ============================================================================\r\n\r\ninterface ControlPanelProps {\r\n  isExploded: boolean\r\n  onExplode: () => void\r\n  onUpload?: () => void\r\n  showUploadButton: boolean\r\n}\r\n\r\nexport function ControlPanel({\r\n  isExploded,\r\n  onExplode,\r\n  onUpload,\r\n  showUploadButton,\r\n}: ControlPanelProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: 24,\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n        zIndex: 10,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: 8,\r\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n          backdropFilter: \"blur(10px)\",\r\n          border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n          borderRadius: 9999,\r\n          padding: \"8px 16px\",\r\n        }}\r\n      >\r\n        {showUploadButton && onUpload && (\r\n          <>\r\n            <button\r\n              onClick={onUpload}\r\n              title=\"Upload new model\"\r\n              style={{\r\n                padding: 8,\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                borderRadius: 9999,\r\n                color: \"white\",\r\n                cursor: \"pointer\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transition: \"background-color 0.2s\",\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.2)\"\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.backgroundColor = \"transparent\"\r\n              }}\r\n            >\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <div style={{ width: 1, height: 24, backgroundColor: \"rgba(255, 255, 255, 0.2)\" }} />\r\n          </>\r\n        )}\r\n\r\n        <button\r\n          onClick={onExplode}\r\n          title={isExploded ? \"Assemble\" : \"Explode\"}\r\n          style={{\r\n            padding: 8,\r\n            backgroundColor: isExploded ? \"rgba(255, 255, 255, 0.2)\" : \"transparent\",\r\n            border: \"none\",\r\n            borderRadius: 9999,\r\n            color: \"white\",\r\n            cursor: \"pointer\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            transition: \"background-color 0.2s\",\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (!isExploded) {\r\n              e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.2)\"\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (!isExploded) {\r\n              e.currentTarget.style.backgroundColor = \"transparent\"\r\n            }\r\n          }}\r\n        >\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import * as THREE from \"three\"\r\n\r\n// ============================================================================\r\n// Animation Presets\r\n// ============================================================================\r\n\r\nexport type AnimationPreset = \"gentle\" | \"normal\" | \"energetic\" | \"dramatic\" | \"custom\"\r\n\r\nexport interface AnimationConfig {\r\n  distance: number\r\n  speed: number\r\n  easing: \"linear\" | \"easeIn\" | \"easeOut\" | \"easeInOut\" | \"bounce\"\r\n  staggerDelay?: number\r\n}\r\n\r\nexport const ANIMATION_PRESETS: Record<AnimationPreset, Partial<AnimationConfig>> = {\r\n  gentle: {\r\n    distance: 1.0,\r\n    speed: 1200,\r\n    easing: \"easeOut\",\r\n    staggerDelay: 20,\r\n  },\r\n  normal: {\r\n    distance: 1.5,\r\n    speed: 800,\r\n    easing: \"easeInOut\",\r\n    staggerDelay: 15,\r\n  },\r\n  energetic: {\r\n    distance: 2.5,\r\n    speed: 600,\r\n    easing: \"easeOut\",\r\n    staggerDelay: 10,\r\n  },\r\n  dramatic: {\r\n    distance: 3.5,\r\n    speed: 1500,\r\n    easing: \"bounce\",\r\n    staggerDelay: 30,\r\n  },\r\n  custom: {},\r\n}\r\n\r\n// ============================================================================\r\n// Material & Visual Options\r\n// ============================================================================\r\n\r\nexport interface MaterialOptions {\r\n  metalness?: number\r\n  roughness?: number\r\n  wireframe?: boolean\r\n  opacity?: number\r\n  emissive?: string\r\n  emissiveIntensity?: number\r\n}\r\n\r\nexport interface VisualOptions {\r\n  backgroundColor?: string\r\n  environmentPreset?: \"sunset\" | \"dawn\" | \"night\" | \"warehouse\" | \"forest\" | \"apartment\" | \"studio\" | \"city\" | \"park\" | \"lobby\"\r\n  gridHelper?: boolean\r\n  axesHelper?: boolean\r\n  stats?: boolean\r\n}\r\n\r\n// ============================================================================\r\n// Component Props\r\n// ============================================================================\r\n\r\nexport interface BreakGLBProps {\r\n  // Model Source\r\n  modelUrl?: string\r\n\r\n  // Visual Customization\r\n  backgroundColor?: string\r\n  environmentPreset?: VisualOptions[\"environmentPreset\"]\r\n  ambientLightIntensity?: number\r\n  directionalLightIntensity?: number\r\n  shadowsEnabled?: boolean\r\n  cameraFov?: number\r\n  cameraPosition?: [number, number, number]\r\n\r\n  // Material Customization\r\n  materialOptions?: MaterialOptions\r\n  highlightColor?: string\r\n  selectedPartColor?: string\r\n\r\n  // Debug Helpers\r\n  gridHelper?: boolean\r\n  axesHelper?: boolean\r\n\r\n  // Animation\r\n  animationPreset?: AnimationPreset\r\n  explosionDistance?: number\r\n  explosionSpeed?: number\r\n  animationEasing?: AnimationConfig[\"easing\"]\r\n  staggerDelay?: number\r\n\r\n  // Behavior Toggles\r\n  showUploadUI?: boolean\r\n  showControls?: boolean\r\n  showLoadingProgress?: boolean\r\n  autoExplode?: boolean\r\n  enablePartSelection?: boolean\r\n  enableLightControl?: boolean\r\n  enablePartDragging?: boolean\r\n\r\n  // Camera Controls\r\n  enableRotate?: boolean\r\n  enableZoom?: boolean\r\n  enablePan?: boolean\r\n  minDistance?: number\r\n  maxDistance?: number\r\n  autoRotate?: boolean\r\n  autoRotateSpeed?: number\r\n\r\n  // Interaction\r\n  doubleClickToExplode?: boolean\r\n  hoverHighlight?: boolean\r\n\r\n  // Lifecycle Callbacks\r\n  onLoad?: (model: THREE.Group, parts: ModelPart[]) => void\r\n  onLoadError?: (error: Error) => void\r\n  onLoadProgress?: (progress: number) => void\r\n  onExplode?: () => void\r\n  onAssemble?: () => void\r\n  onPartSelect?: (part: ModelPart | null) => void\r\n  onPartHover?: (part: ModelPart | null) => void\r\n\r\n  // Style Overrides\r\n  className?: string\r\n  containerStyle?: React.CSSProperties\r\n\r\n  // Advanced\r\n  maxPixelRatio?: number\r\n  antialias?: boolean\r\n}\r\n\r\n// ============================================================================\r\n// Model Part Interface\r\n// ============================================================================\r\n\r\nexport interface ModelPart {\r\n  id: string\r\n  name: string\r\n  object: THREE.Object3D\r\n  originalPosition: THREE.Vector3\r\n  originalRotation: THREE.Euler\r\n  boundingBox: THREE.Box3\r\n  center: THREE.Vector3\r\n  metadata?: Record<string, any>\r\n}\r\n\r\n// ============================================================================\r\n// Control API\r\n// ============================================================================\r\n\r\nexport interface BreakGLBRef {\r\n  explode: () => void\r\n  assemble: () => void\r\n  toggleExplode: () => void\r\n  selectPart: (partId: string | null) => void\r\n  resetCamera: () => void\r\n  focusPart: (partId: string) => void\r\n  getModel: () => THREE.Group | null\r\n  getParts: () => ModelPart[]\r\n  isExploded: () => boolean\r\n  exportSnapshot: () => Promise<string>\r\n}\r\n\r\n// ============================================================================\r\n// Internal Types\r\n// ============================================================================\r\n\r\nexport interface Part {\r\n  object: THREE.Object3D\r\n  originalPosition: THREE.Vector3\r\n  explodedPosition: THREE.Vector3\r\n  currentPosition: THREE.Vector3\r\n  velocity: THREE.Vector3\r\n  angularVelocity: THREE.Euler\r\n  originalRotation: THREE.Euler\r\n  name: string\r\n  id: string\r\n  center: THREE.Vector3\r\n  floatOffset: number\r\n  rotationSpeed: number\r\n  bobSpeed: number\r\n  boundingBox: THREE.Box3\r\n  collisionRadius: number\r\n  isDragging: boolean\r\n  collisionMesh: THREE.Mesh | null\r\n  grabOffset: THREE.Vector3\r\n  staggerDelay: number\r\n}\r\n\r\nexport interface ModelProps {\r\n  url: string\r\n  isExploded: boolean\r\n  selectedPart: string | null\r\n  onPartSelect: (partName: string | null) => void\r\n  onPartHover?: (partName: string | null) => void\r\n  onExplodeComplete?: () => void\r\n  onModelLoad?: (model: THREE.Group, parts: ModelPart[]) => void\r\n  lightPosition: THREE.Vector3\r\n  explosionDistance: number\r\n  staggerDelay: number\r\n  enablePartSelection: boolean\r\n  enablePartDragging: boolean\r\n  hoverHighlight: boolean\r\n  materialOptions?: MaterialOptions\r\n  highlightColor: string\r\n  selectedPartColor: string\r\n}\r\n"]}