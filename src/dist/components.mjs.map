{"version":3,"sources":["../components.tsx"],"names":["LoadingFallback","progress","message","jsxs","jsx","ErrorDisplay","error","onRetry","onDismiss","e","UploadZone","onFileSelect","isDragging","inputRef","React","event","file","ControlPanel","isExploded","onExplode","onUpload","showUploadButton","Fragment"],"mappings":"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","file":"components.mjs","sourcesContent":["import React from \"react\"\r\n\r\n// ============================================================================\r\n// Loading Component\r\n// ============================================================================\r\n\r\ninterface LoadingProps {\r\n  progress?: number\r\n  message?: string\r\n}\r\n\r\nexport function LoadingFallback({ progress, message }: LoadingProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        inset: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n        color: \"white\",\r\n        fontFamily: \"system-ui, -apple-system, sans-serif\",\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: 50,\r\n          height: 50,\r\n          border: \"3px solid rgba(255, 255, 255, 0.1)\",\r\n          borderTop: \"3px solid white\",\r\n          borderRadius: \"50%\",\r\n          animation: \"spin 1s linear infinite\",\r\n        }}\r\n      />\r\n      {message && (\r\n        <p style={{ marginTop: 20, fontSize: 14, opacity: 0.8 }}>{message}</p>\r\n      )}\r\n      {progress !== undefined && (\r\n        <div style={{ marginTop: 15, width: 200 }}>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: 4,\r\n              backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n              borderRadius: 2,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: `${progress}%`,\r\n                height: \"100%\",\r\n                backgroundColor: \"white\",\r\n                transition: \"width 0.3s ease\",\r\n              }}\r\n            />\r\n          </div>\r\n          <p style={{ marginTop: 8, fontSize: 12, opacity: 0.6, textAlign: \"center\" }}>\r\n            {Math.round(progress)}%\r\n          </p>\r\n        </div>\r\n      )}\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// Error Component\r\n// ============================================================================\r\n\r\ninterface ErrorDisplayProps {\r\n  error: Error\r\n  onRetry?: () => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nexport function ErrorDisplay({ error, onRetry, onDismiss }: ErrorDisplayProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        inset: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.9)\",\r\n        color: \"white\",\r\n        fontFamily: \"system-ui, -apple-system, sans-serif\",\r\n        padding: 20,\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <svg\r\n        width=\"64\"\r\n        height=\"64\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        style={{ marginBottom: 20, color: \"#ef4444\" }}\r\n      >\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\r\n      </svg>\r\n\r\n      <h3 style={{ margin: 0, marginBottom: 10, fontSize: 18, fontWeight: 600 }}>\r\n        Failed to Load Model\r\n      </h3>\r\n\r\n      <p\r\n        style={{\r\n          margin: 0,\r\n          marginBottom: 20,\r\n          fontSize: 14,\r\n          opacity: 0.7,\r\n          maxWidth: 400,\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {error.message || \"An unexpected error occurred while loading the 3D model.\"}\r\n      </p>\r\n\r\n      <div style={{ display: \"flex\", gap: 10 }}>\r\n        {onRetry && (\r\n          <button\r\n            onClick={onRetry}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              backgroundColor: \"#3b82f6\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: 6,\r\n              fontSize: 14,\r\n              fontWeight: 500,\r\n              cursor: \"pointer\",\r\n              transition: \"background-color 0.2s\",\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"#2563eb\"\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"#3b82f6\"\r\n            }}\r\n          >\r\n            Try Again\r\n          </button>\r\n        )}\r\n        {onDismiss && (\r\n          <button\r\n            onClick={onDismiss}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n              color: \"white\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n              borderRadius: 6,\r\n              fontSize: 14,\r\n              fontWeight: 500,\r\n              cursor: \"pointer\",\r\n              transition: \"background-color 0.2s\",\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.15)\"\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.1)\"\r\n            }}\r\n          >\r\n            Dismiss\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// Upload Zone Component\r\n// ============================================================================\r\n\r\ninterface UploadZoneProps {\r\n  onFileSelect: (file: File) => void\r\n  isDragging: boolean\r\n}\r\n\r\nexport function UploadZone({ onFileSelect, isDragging }: UploadZoneProps) {\r\n  const inputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (file) {\r\n      onFileSelect(file)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => inputRef.current?.click()}\r\n      style={{\r\n        position: \"absolute\",\r\n        inset: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.2s\",\r\n        backgroundColor: isDragging ? \"rgba(255, 255, 255, 0.05)\" : \"transparent\",\r\n      }}\r\n    >\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        accept=\".glb\"\r\n        onChange={handleFileChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n\r\n      <svg\r\n        width=\"80\"\r\n        height=\"80\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"1.5\"\r\n        style={{\r\n          marginBottom: 20,\r\n          color: \"rgba(255, 255, 255, 0.5)\",\r\n          transition: \"transform 0.2s\",\r\n          transform: isDragging ? \"scale(1.1)\" : \"scale(1)\",\r\n        }}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n        />\r\n      </svg>\r\n\r\n      <h3\r\n        style={{\r\n          margin: 0,\r\n          marginBottom: 8,\r\n          fontSize: 20,\r\n          fontWeight: 600,\r\n          color: \"rgba(255, 255, 255, 0.9)\",\r\n        }}\r\n      >\r\n        {isDragging ? \"Drop to Upload\" : \"Upload 3D Model\"}\r\n      </h3>\r\n\r\n      <p\r\n        style={{\r\n          margin: 0,\r\n          fontSize: 14,\r\n          color: \"rgba(255, 255, 255, 0.5)\",\r\n        }}\r\n      >\r\n        {isDragging ? \"Release to load\" : \"Click or drag GLB file here\"}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ============================================================================\r\n// Control Panel Component\r\n// ============================================================================\r\n\r\ninterface ControlPanelProps {\r\n  isExploded: boolean\r\n  onExplode: () => void\r\n  onUpload?: () => void\r\n  showUploadButton: boolean\r\n}\r\n\r\nexport function ControlPanel({\r\n  isExploded,\r\n  onExplode,\r\n  onUpload,\r\n  showUploadButton,\r\n}: ControlPanelProps) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: 24,\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n        zIndex: 10,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: 8,\r\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n          backdropFilter: \"blur(10px)\",\r\n          border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n          borderRadius: 9999,\r\n          padding: \"8px 16px\",\r\n        }}\r\n      >\r\n        {showUploadButton && onUpload && (\r\n          <>\r\n            <button\r\n              onClick={onUpload}\r\n              title=\"Upload new model\"\r\n              style={{\r\n                padding: 8,\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                borderRadius: 9999,\r\n                color: \"white\",\r\n                cursor: \"pointer\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transition: \"background-color 0.2s\",\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.2)\"\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.backgroundColor = \"transparent\"\r\n              }}\r\n            >\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <div style={{ width: 1, height: 24, backgroundColor: \"rgba(255, 255, 255, 0.2)\" }} />\r\n          </>\r\n        )}\r\n\r\n        <button\r\n          onClick={onExplode}\r\n          title={isExploded ? \"Assemble\" : \"Explode\"}\r\n          style={{\r\n            padding: 8,\r\n            backgroundColor: isExploded ? \"rgba(255, 255, 255, 0.2)\" : \"transparent\",\r\n            border: \"none\",\r\n            borderRadius: 9999,\r\n            color: \"white\",\r\n            cursor: \"pointer\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            transition: \"background-color 0.2s\",\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (!isExploded) {\r\n              e.currentTarget.style.backgroundColor = \"rgba(255, 255, 255, 0.2)\"\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (!isExploded) {\r\n              e.currentTarget.style.backgroundColor = \"transparent\"\r\n            }\r\n          }}\r\n        >\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]}